"""init: movies and actors

Revision ID: 35b131080511
Revises: 
Create Date: 2024-03-27 14:26:18.809292

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '35b131080511'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actors',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.CheckConstraint('length(name) < 40', name='check_actors_name_length'),
    sa.CheckConstraint('length(surname) < 40', name='check_actors_surname_length'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movies',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('imdb', sa.String(), nullable=False),
    sa.Column('poster', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.CheckConstraint("imdb ~ '^tt\\d{7}$'", name='check_movies_imdb_regex'),
    sa.CheckConstraint("poster = 'N/A' OR poster ~ '^https?:\\/\\/(?NULL\\.)?[-a-zA-Z0-9@:%%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%%_\\+.~#?&\\/=]*)$'", name='check_movies_imdb_poster'),
    sa.CheckConstraint('length(title) < 50', name='check_movies_title_length'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('imdb', name='unique_movies_imdb'),
    sa.UniqueConstraint('title', name='unique_movies_title')
    )
    op.create_table('movies_actors',
    sa.Column('movie_id', sa.Uuid(), nullable=False),
    sa.Column('actor_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('movie_id', 'actor_id', name='unique_movies_actors_movie_id_and_actor_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('movies_actors')
    op.drop_table('movies')
    op.drop_table('actors')
    # ### end Alembic commands ###
